<?xml version="1.0" encoding="UTF-8"?>
  <testsuite name="Policy collection repo e2e Suite" tests="86" failures="58" errors="0" time="4972.744">
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Clean up before all" classname="Policy collection repo e2e Suite" time="0.10847454"></testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator community/policy-gatekeeper-operator should be created on hub" classname="Policy collection repo e2e Suite" time="12.405421315"></testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator community/policy-gatekeeper-operator should be created on managed cluster" classname="Policy collection repo e2e Suite" time="30.050622132">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:96&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0004552c0&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Checking policy-gatekeeper-operator on managed cluster in ns &#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator community/policy-gatekeeper-operator should be noncompliant" classname="Policy collection repo e2e Suite" time="60.050678957">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:101&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: NonCompliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:115</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is noncompliant&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Enforcing community/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="30.213751098">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:117&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0001c15e0&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = enforce on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Gatekeeper operator pod should be running" classname="Policy collection repo e2e Suite" time="120.05091063">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:133&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;not to equal&#xA;    &lt;int&gt;: 0&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:139</failure>
          <system-out>�[1mSTEP�[0m: Checking if pod gatekeeper-operator has been created&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Patching webhook check-ignore-label.gatekeeper.sh failurePolicy to ignore" classname="Policy collection repo e2e Suite" time="62.45325886">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:153&#xA;Timed out after 62.401s.&#xA;Expected&#xA;    &lt;string&gt;: I0422 15:10:25.750374    4775 request.go:655] Throttling request took 1.156781512s, request: GET:https://api.ocp4-az-3.az.dev06.red-chesterfield.com:6443/apis/snapshot.storage.k8s.io/v1?timeout=32s&#xA;    Error from server (NotFound): validatingwebhookconfigurations.admissionregistration.k8s.io &#34;gatekeeper-validating-webhook-configuration&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: AGE&#xA;    gatekeeper-validating-webhook-configuration&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:158</failure>
          <system-out>�[1mSTEP�[0m: Checking if validating webhook gatekeeper-validating-webhook-configuration exists&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Gatekeeper audit pod should be running" classname="Policy collection repo e2e Suite" time="60.129256092">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:164&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;to equal&#xA;    &lt;int&gt;: 1&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:170</failure>
          <system-out>�[1mSTEP�[0m: Checking if pod gatekeeper-audit has been created&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Gatekeeper controller manager pods should be running" classname="Policy collection repo e2e Suite" time="60.052178969">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:179&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;to equal&#xA;    &lt;int&gt;: 2&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:185</failure>
          <system-out>�[1mSTEP�[0m: Checking if pod gatekeeper-controller-manager has been created&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator community/policy-gatekeeper-operator should be compliant" classname="Policy collection repo e2e Suite" time="180.059348572">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:193&#xA;Timed out after 180.001s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:207</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1692 GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Informing community/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="30.214333544">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:209&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0005c0b40&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = inform on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1274/RHACM4K-1282 GRC: [P1][Sev1][policy-grc] Test community/policy-gatekeeper-sample community/policy-gatekeeper-sample should be created on hub" classname="Policy collection repo e2e Suite" time="7.446609333"></testcase>
      <testcase name=" RHACM4K-1274/RHACM4K-1282 GRC: [P1][Sev1][policy-grc] Test community/policy-gatekeeper-sample community/policy-gatekeeper-sample should be compliant" classname="Policy collection repo e2e Suite" time="180.05285358">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:240&#xA;Timed out after 180.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:254</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1274/RHACM4K-1282 GRC: [P1][Sev1][policy-grc] Test community/policy-gatekeeper-sample Creating a valid ns should not be blocked by gatekeeper" classname="Policy collection repo e2e Suite" time="1.271682164"></testcase>
      <testcase name=" RHACM4K-1274/RHACM4K-1282 GRC: [P1][Sev1][policy-grc] Test community/policy-gatekeeper-sample Creating an invalid ns should generate a violation message" classname="Policy collection repo e2e Suite" time="180.06129264">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:269&#xA;Timed out after 180.000s.&#xA;Expected&#xA;    &lt;string&gt;: Error from server (AlreadyExists): namespaces &#34;e2etestfail&#34; already exists&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: denied by ns-must-have-gk&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:274</failure>
          <system-out>�[1mSTEP�[0m: Creating invalid namespace on managed&#xA;</system-out>
      </testcase>
      <testcase name=" RHACM4K-1274/RHACM4K-1282 GRC: [P1][Sev1][policy-grc] Test community/policy-gatekeeper-sample community/policy-gatekeeper-sample should be noncompliant" classname="Policy collection repo e2e Suite" time="120.154331863">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:289&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: NonCompliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:303</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is noncompliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Enabling mutation feature through policy" classname="Policy collection repo e2e Suite" time="0.220792943"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Enforcing policy-gatekeeper-operator to enable mutation feature" classname="Policy collection repo e2e Suite" time="30.212401734">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:319&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0001c1040&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = enforce on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature policy-gatekeeper-operator should be compliant" classname="Policy collection repo e2e Suite" time="60.07370376">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:335&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:349</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Checking if Assign/AssingnMetadata CRDs have been created" classname="Policy collection repo e2e Suite" time="120.050305262">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:351&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;string&gt;: Error from server (NotFound): customresourcedefinitions.apiextensions.k8s.io &#34;assign.mutations.gatekeeper.sh&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: CREATED AT&#xA;    assign.mutations.gatekeeper.sh&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:355</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Patching webhook check-ignore-label.gatekeeper.sh failurePolicy to ignore" classname="Policy collection repo e2e Suite" time="62.245107358">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:362&#xA;Timed out after 62.090s.&#xA;Expected&#xA;    &lt;string&gt;: I0422 15:28:37.960714    6677 request.go:655] Throttling request took 1.134642912s, request: GET:https://api.ocp4-az-3.az.dev06.red-chesterfield.com:6443/apis/console.openshift.io/v1?timeout=32s&#xA;    Error from server (NotFound): validatingwebhookconfigurations.admissionregistration.k8s.io &#34;gatekeeper-validating-webhook-configuration&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: AGE&#xA;    gatekeeper-validating-webhook-configuration&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:367</failure>
          <system-out>�[1mSTEP�[0m: Checking if validating webhook gatekeeper-validating-webhook-configuration exists&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Checking if gatekeeper controller manager has mutation flag on" classname="Policy collection repo e2e Suite" time="0.137581731">
          <failure type="Panic">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:373&#xA;Test Panicked&#xA;/usr/lib/golang/src/runtime/panic.go:88&#xA;&#xA;Panic: runtime error: index out of range [0] with length 0&#xA;&#xA;Full stack:&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func4.4.6.1(0x0, 0x0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:376 +0x237&#xA;reflect.Value.call(0x1309bc0, 0x15a98a8, 0x13, 0x1502683, 0x4, 0xc0005af0b0, 0x0, 0x0, 0x1309bc0, 0x1, ...)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:460 +0x8ab&#xA;reflect.Value.Call(0x1309bc0, 0x15a98a8, 0x13, 0xc0005af0b0, 0x0, 0x0, 0x1040fed71d092, 0xc00027bb38, 0x1040fed71d092)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:321 +0xb4&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).pollActual(0xc0002bc2c0, 0xc00027bb30, 0x23dca80, 0x203000, 0xc0005af1c8)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:78 +0xe9&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc0002bc2c0, 0x16f8720, 0xc000542e50, 0x412f01, 0x0, 0x0, 0x0, 0xc000542e50)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:112 +0x8f&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc0002bc2c0, 0x16f8720, 0xc000542e50, 0x0, 0x0, 0x0, 0x16ecfa0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:51 +0x81&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func4.4.6()&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:377 +0x147&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.TestE2e(0xc0003f8240)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_collection_suite_test.go:50 +0xf8&#xA;testing.tRunner(0xc0003f8240, 0x15a92a0)&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1050 +0xdc&#xA;created by testing.(*T).Run&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1095 +0x28b</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Install mutation policy Creating mutation policy on hub" classname="Policy collection repo e2e Suite" time="13.892597664"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Install mutation policy policy-gatekeeper-image-pull-policy should be compliant" classname="Policy collection repo e2e Suite" time="60.068900796">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:400&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:414</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Install mutation policy policy-gatekeeper-annotation-owner should be compliant" classname="Policy collection repo e2e Suite" time="60.067867952">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:416&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:430</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test gatekeeper mutation feature Verify mutation feature" classname="Policy collection repo e2e Suite" time="180.067116935">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:436&#xA;Timed out after 180.000s.&#xA;Expected&#xA;    &lt;string&gt;: &#xA;to equal&#xA;    &lt;string&gt;: admin&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:443</failure>
          <system-out>�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Disabling mutation feature through policy" classname="Policy collection repo e2e Suite" time="0.236714148"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Checking if Assign/AssingnMetadata CRDs have been removed" classname="Policy collection repo e2e Suite" time="0.74765863"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Patching webhook check-ignore-label.gatekeeper.sh failurePolicy to ignore" classname="Policy collection repo e2e Suite" time="62.196839348">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:477&#xA;Timed out after 62.122s.&#xA;Expected&#xA;    &lt;string&gt;: I0422 15:34:55.399504    7442 request.go:655] Throttling request took 1.089615852s, request: GET:https://api.ocp4-az-3.az.dev06.red-chesterfield.com:6443/apis/operator.open-cluster-management.io/v1?timeout=32s&#xA;    Error from server (NotFound): validatingwebhookconfigurations.admissionregistration.k8s.io &#34;gatekeeper-validating-webhook-configuration&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: AGE&#xA;    gatekeeper-validating-webhook-configuration&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:482</failure>
          <system-out>�[1mSTEP�[0m: Checking if validating webhook gatekeeper-validating-webhook-configuration exists&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Checking if gatekeeper controller manager has mutation flag off" classname="Policy collection repo e2e Suite" time="0.129623885">
          <failure type="Panic">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:488&#xA;Test Panicked&#xA;/usr/lib/golang/src/runtime/panic.go:88&#xA;&#xA;Panic: runtime error: index out of range [0] with length 0&#xA;&#xA;Full stack:&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func4.7.4.1(0x0, 0x0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:491 +0x237&#xA;reflect.Value.call(0x1309bc0, 0x15a9950, 0x13, 0x1502683, 0x4, 0xc0007b90e0, 0x0, 0x0, 0x1309bc0, 0x1, ...)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:460 +0x8ab&#xA;reflect.Value.Call(0x1309bc0, 0x15a9950, 0x13, 0xc0007b90e0, 0x0, 0x0, 0x10467cd004f0d, 0xc00027b908, 0x10467cd004f0d)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:321 +0xb4&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).pollActual(0xc0002bc800, 0xc00027b900, 0x23dca80, 0x203000, 0x0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:78 +0xe9&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc0002bc800, 0x16f8720, 0xc000643bb0, 0x412f01, 0x0, 0x0, 0x0, 0xc000643bb0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:112 +0x8f&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc0002bc800, 0x16f8720, 0xc000643bb0, 0x0, 0x0, 0x0, 0x16ecfa0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:51 +0x81&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func4.7.4()&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:492 +0x124&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.TestE2e(0xc0003f8240)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_collection_suite_test.go:50 +0xf8&#xA;testing.tRunner(0xc0003f8240, 0x15a92a0)&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1050 +0xdc&#xA;created by testing.(*T).Run&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1095 +0x28b</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Informing community/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="30.230448455">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:494&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc00051ce60&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = inform on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Clean up after all Clean up mutation policies" classname="Policy collection repo e2e Suite" time="4.006022476"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Clean up after all Clean up community/policy-gatekeeper-sample" classname="Policy collection repo e2e Suite" time="16.211165202"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Clean up after all Clean up community/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="32.944576798">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:535&#xA;Expected&#xA;    &lt;string&gt;: Error from server (NotFound): namespaces &#34;openshift-gatekeeper-operator&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: namespace &#34;openshift-gatekeeper-operator&#34; deleted&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_test.go:551</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator stable/policy-gatekeeper-operator should be created on hub" classname="Policy collection repo e2e Suite" time="7.060665439"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator stable/policy-gatekeeper-operator should be created on managed cluster" classname="Policy collection repo e2e Suite" time="30.053869984">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:45&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc00051cb40&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Checking policy-gatekeeper-operator on managed cluster in ns &#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator stable/policy-gatekeeper-operator should be noncompliant" classname="Policy collection repo e2e Suite" time="60.055838778">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:50&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: NonCompliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:64</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is noncompliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Enforcing stable/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="30.232908041">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:66&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0004559a0&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = enforce on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Gatekeeper operator pod should be running" classname="Policy collection repo e2e Suite" time="360.055017986">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:82&#xA;Timed out after 360.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;to equal&#xA;    &lt;int&gt;: 1&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:94</failure>
          <system-out>�[1mSTEP�[0m: Checking if pod gatekeeper-operator has been created&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Patching webhook check-ignore-label.gatekeeper.sh failurePolicy to ignore" classname="Policy collection repo e2e Suite" time="62.095445961">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:108&#xA;Timed out after 62.042s.&#xA;Expected&#xA;    &lt;string&gt;: I0422 15:45:28.445429    7662 request.go:655] Throttling request took 1.076708394s, request: GET:https://api.ocp4-az-3.az.dev06.red-chesterfield.com:6443/apis/core.observatorium.io/v1alpha1?timeout=32s&#xA;    Error from server (NotFound): validatingwebhookconfigurations.admissionregistration.k8s.io &#34;gatekeeper-validating-webhook-configuration&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: AGE&#xA;    gatekeeper-validating-webhook-configuration&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:113</failure>
          <system-out>�[1mSTEP�[0m: Checking if validating webhook gatekeeper-validating-webhook-configuration exists&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Gatekeeper audit pod should be running" classname="Policy collection repo e2e Suite" time="60.104239091">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:119&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;to equal&#xA;    &lt;int&gt;: 1&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:125</failure>
          <system-out>�[1mSTEP�[0m: Checking if pod gatekeeper-audit has been created&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Gatekeeper controller manager pods should be running" classname="Policy collection repo e2e Suite" time="60.050035058">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:134&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;to equal&#xA;    &lt;int&gt;: 2&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:140</failure>
          <system-out>�[1mSTEP�[0m: Checking if pod gatekeeper-controller-manager has been created&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator stable/policy-gatekeeper-operator should be compliant" classname="Policy collection repo e2e Suite" time="180.050592257">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:148&#xA;Timed out after 180.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:162</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test installing gatekeeper operator Informing stable/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="30.222790775">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:164&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0002d6500&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = inform on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test stable/policy-gatekeeper-sample stable/policy-gatekeeper-sample should be created on hub" classname="Policy collection repo e2e Suite" time="7.272958195"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test stable/policy-gatekeeper-sample stable/policy-gatekeeper-sample should be compliant" classname="Policy collection repo e2e Suite" time="180.055411624">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:195&#xA;Timed out after 180.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:209</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test stable/policy-gatekeeper-sample Creating a valid ns should not be blocked by gatekeeper" classname="Policy collection repo e2e Suite" time="1.094997252"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test stable/policy-gatekeeper-sample Creating an invalid ns should generate a violation message" classname="Policy collection repo e2e Suite" time="180.064287366">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:224&#xA;Timed out after 180.000s.&#xA;Expected&#xA;    &lt;string&gt;: Error from server (AlreadyExists): namespaces &#34;e2etestfail&#34; already exists&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: denied by ns-must-have-gk&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:229</failure>
          <system-out>�[1mSTEP�[0m: Creating invalid namespace on managed&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test stable/policy-gatekeeper-sample stable/policy-gatekeeper-sample should be noncompliant" classname="Policy collection repo e2e Suite" time="120.144209551">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:244&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: NonCompliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:258</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is noncompliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Enabling mutation feature through policy" classname="Policy collection repo e2e Suite" time="0.169297624"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Enforcing policy-gatekeeper-operator to enable mutation feature" classname="Policy collection repo e2e Suite" time="30.169354387">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:274&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc00051cfa0&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = enforce on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature policy-gatekeeper-operator should be compliant" classname="Policy collection repo e2e Suite" time="60.044450049">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:290&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:304</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Checking if Assign/AssingnMetadata CRDs have been created" classname="Policy collection repo e2e Suite" time="240.042151948">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:306&#xA;Timed out after 240.000s.&#xA;Expected&#xA;    &lt;string&gt;: Error from server (NotFound): customresourcedefinitions.apiextensions.k8s.io &#34;assign.mutations.gatekeeper.sh&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: CREATED AT&#xA;    assign.mutations.gatekeeper.sh&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:310</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Patching webhook check-ignore-label.gatekeeper.sh failurePolicy to ignore" classname="Policy collection repo e2e Suite" time="62.281154177">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:317&#xA;Timed out after 62.173s.&#xA;Expected&#xA;    &lt;string&gt;: I0422 16:05:40.236512   10288 request.go:655] Throttling request took 1.082636489s, request: GET:https://api.ocp4-az-3.az.dev06.red-chesterfield.com:6443/apis/wgpolicyk8s.io/v1alpha2?timeout=32s&#xA;    Error from server (NotFound): validatingwebhookconfigurations.admissionregistration.k8s.io &#34;gatekeeper-validating-webhook-configuration&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: AGE&#xA;    gatekeeper-validating-webhook-configuration&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:322</failure>
          <system-out>�[1mSTEP�[0m: Checking if validating webhook gatekeeper-validating-webhook-configuration exists&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test enabling gatekeeper mutation feature Checking if gatekeeper controller manager has mutation flag on" classname="Policy collection repo e2e Suite" time="0.094843579">
          <failure type="Panic">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:328&#xA;Test Panicked&#xA;/usr/lib/golang/src/runtime/panic.go:88&#xA;&#xA;Panic: runtime error: index out of range [0] with length 0&#xA;&#xA;Full stack:&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func3.4.6.1(0x0, 0x0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:331 +0x237&#xA;reflect.Value.call(0x1309bc0, 0x15a95c8, 0x13, 0x1502683, 0x4, 0xc00069b0b0, 0x0, 0x0, 0x1309bc0, 0x1, ...)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:460 +0x8ab&#xA;reflect.Value.Call(0x1309bc0, 0x15a95c8, 0x13, 0xc00069b0b0, 0x0, 0x0, 0x10615556c82c7, 0xc000508918, 0x10615556c82c7)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:321 +0xb4&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).pollActual(0xc0005f7b80, 0xc000508910, 0x23dca80, 0x203000, 0xc00069b1c8)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:78 +0xe9&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc0005f7b80, 0x16f8720, 0xc000643160, 0x412f01, 0x0, 0x0, 0x0, 0xc000643160)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:112 +0x8f&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc0005f7b80, 0x16f8720, 0xc000643160, 0x0, 0x0, 0x0, 0x16ecfa0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:51 +0x81&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func3.4.6()&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:332 +0x147&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.TestE2e(0xc0003f8240)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_collection_suite_test.go:50 +0xf8&#xA;testing.tRunner(0xc0003f8240, 0x15a92a0)&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1050 +0xdc&#xA;created by testing.(*T).Run&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1095 +0x28b</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Install mutation policy Creating mutation policy on hub" classname="Policy collection repo e2e Suite" time="14.024785396"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Install mutation policy policy-gatekeeper-image-pull-policy should be compliant" classname="Policy collection repo e2e Suite" time="60.067222388">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:355&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:369</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Install mutation policy policy-gatekeeper-annotation-owner should be compliant" classname="Policy collection repo e2e Suite" time="60.044064027">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:371&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:385</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test gatekeeper mutation feature Verify mutation feature" classname="Policy collection repo e2e Suite" time="180.234339003">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:391&#xA;Timed out after 180.193s.&#xA;Expected&#xA;    &lt;string&gt;: &#xA;to equal&#xA;    &lt;string&gt;: admin&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:398</failure>
          <system-out>�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;�[1mSTEP�[0m: Creating a pod to test AssignMetadata&#xA;�[1mSTEP�[0m: Check if pod contains annotation owner=admin&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Disabling mutation feature through policy" classname="Policy collection repo e2e Suite" time="0.181779298"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Checking if Assign/AssingnMetadata CRDs have been removed" classname="Policy collection repo e2e Suite" time="0.747852329"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Patching webhook check-ignore-label.gatekeeper.sh failurePolicy to ignore" classname="Policy collection repo e2e Suite" time="62.083006664">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:433&#xA;Timed out after 62.040s.&#xA;Expected&#xA;    &lt;string&gt;: I0422 16:11:57.706722   11047 request.go:655] Throttling request took 1.074301518s, request: GET:https://api.ocp4-az-3.az.dev06.red-chesterfield.com:6443/apis/operators.coreos.com/v1alpha2?timeout=32s&#xA;    Error from server (NotFound): validatingwebhookconfigurations.admissionregistration.k8s.io &#34;gatekeeper-validating-webhook-configuration&#34; not found&#xA;    &#xA;to contain substring&#xA;    &lt;string&gt;: AGE&#xA;    gatekeeper-validating-webhook-configuration&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:438</failure>
          <system-out>�[1mSTEP�[0m: Checking if validating webhook gatekeeper-validating-webhook-configuration exists&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Checking if gatekeeper controller manager has mutation flag off" classname="Policy collection repo e2e Suite" time="0.103039046">
          <failure type="Panic">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:444&#xA;Test Panicked&#xA;/usr/lib/golang/src/runtime/panic.go:88&#xA;&#xA;Panic: runtime error: index out of range [0] with length 0&#xA;&#xA;Full stack:&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func3.7.4.1(0x0, 0x0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:447 +0x237&#xA;reflect.Value.call(0x1309bc0, 0x15a9670, 0x13, 0x1502683, 0x4, 0xc00069b0e0, 0x0, 0x0, 0x1309bc0, 0x1, ...)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:460 +0x8ab&#xA;reflect.Value.Call(0x1309bc0, 0x15a9670, 0x13, 0xc00069b0e0, 0x0, 0x0, 0x1066d392b2e8b, 0xc0001cadc8, 0x1066d392b2e8b)&#xA;&#x9;/usr/lib/golang/src/reflect/value.go:321 +0xb4&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).pollActual(0xc00012a200, 0xc0001cadc0, 0x23dca80, 0x203000, 0x0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:78 +0xe9&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).match(0xc00012a200, 0x16f8720, 0xc000643ce0, 0x412f01, 0x0, 0x0, 0x0, 0xc000643ce0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:112 +0x8f&#xA;github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion.(*AsyncAssertion).Should(0xc00012a200, 0x16f8720, 0xc000643ce0, 0x0, 0x0, 0x0, 0x16ecfa0)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/onsi/gomega/internal/asyncassertion/async_assertion.go:51 +0x81&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.glob..func3.7.4()&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:448 +0x124&#xA;github.com/open-cluster-management/governance-policy-framework/test/policy-collection.TestE2e(0xc0003f8240)&#xA;&#x9;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_collection_suite_test.go:50 +0xf8&#xA;testing.tRunner(0xc0003f8240, 0x15a92a0)&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1050 +0xdc&#xA;created by testing.(*T).Run&#xA;&#x9;/usr/lib/golang/src/testing/testing.go:1095 +0x28b</failure>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Test disabling gatekeeper mutation feature Informing stable/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="30.169675757">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_gatekeeper_operator_downstream_test.go:450&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0001c1a40&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = inform on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Clean up after all Clean up mutation policies" classname="Policy collection repo e2e Suite" time="12.846025476"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Clean up after all Clean up stable/policy-gatekeeper-sample" classname="Policy collection repo e2e Suite" time="15.289136507"></testcase>
      <testcase name=" GRC: [P1][Sev1][policy-grc] Clean up after all Clean up stable/policy-gatekeeper-operator" classname="Policy collection repo e2e Suite" time="33.699965691"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Clean up before all clean up compliance scan e8" classname="Policy collection repo e2e Suite" time="0.081446942">
          <skipped>/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:56&#xA;Skipping as clean up not needed&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:58</skipped>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Clean up before all clean up compliance operator" classname="Policy collection repo e2e Suite" time="0.085663725">
          <skipped>/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:80&#xA;Skipping as clean up not needed&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:82</skipped>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator clean up in case the last build failed" classname="Policy collection repo e2e Suite" time="0.084540563"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator stable/policy-comp-operator should be created on hub" classname="Policy collection repo e2e Suite" time="6.994691096"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator stable/policy-comp-operator should be created on managed cluster" classname="Policy collection repo e2e Suite" time="60.057422467">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:123&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc00051da40&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Checking policy-comp-operator on managed cluster in ns &#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator stable/policy-comp-operator should be noncompliant" classname="Policy collection repo e2e Suite" time="60.040017059">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:128&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: NonCompliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:142</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is noncompliant&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator Enforcing stable/policy-comp-operator" classname="Policy collection repo e2e Suite" time="30.182394493">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:144&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0005c1040&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = enforce on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator stable/policy-comp-operator should be compliant" classname="Policy collection repo e2e Suite" time="120.042235503">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:160&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;nil&gt;: nil&#xA;to equal&#xA;    &lt;v1.ComplianceState&gt;: Compliant&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:174</failure>
          <system-out>�[1mSTEP�[0m: Checking if the status of root policy is compliant&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator Compliance operator pod should be running" classname="Policy collection repo e2e Suite" time="0.160855794"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator Profile bundle pods should be running" classname="Policy collection repo e2e Suite" time="36.889543782"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-comp-operator Informing stable/policy-comp-operator" classname="Policy collection repo e2e Suite" time="30.174146878">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:222&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc000455220&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = inform on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan stable/policy-e8-scan should be created on hub" classname="Policy collection repo e2e Suite" time="6.918130495"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan stable/policy-e8-scan should be created on managed cluster" classname="Policy collection repo e2e Suite" time="60.041046488">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:251&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0005c1cc0&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Checking policy-e8-scan on managed cluster in ns &#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan Enforcing stable/policy-e8-scan" classname="Policy collection repo e2e Suite" time="30.172067881">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:256&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc00051dae0&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = enforce on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is enforce for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan ComplianceSuite e8 should be created" classname="Policy collection repo e2e Suite" time="0.17852236"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan Informing stable/policy-e8-scan" classname="Policy collection repo e2e Suite" time="30.173034461">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:287&#xA;Timed out after 30.000s.&#xA;Expected&#xA;    &lt;*errors.StatusError | 0xc0005c0460&gt;: {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;404 page not found&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;to be nil&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/vendor/github.com/open-cluster-management/governance-policy-propagator/test/utils/utils.go:115</failure>
          <system-out>�[1mSTEP�[0m: Patching remediationAction = inform on root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for root policy&#xA;�[1mSTEP�[0m: Checking if remediationAction is inform for replicated policy&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan ComplianceCheckResult should be created" classname="Policy collection repo e2e Suite" time="120.064832464">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:303&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;int&gt;: 0&#xA;not to equal&#xA;    &lt;int&gt;: 0&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:309</failure>
          <system-out>�[1mSTEP�[0m: Checking if any ComplianceCheckResult CR exists on managed cluster&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan ComplianceSuite e8 scan results should be AGGREGATING" classname="Policy collection repo e2e Suite" time="120.092923417">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:311&#xA;Timed out after 120.053s.&#xA;Expected&#xA;    &lt;string&gt;: RUNNING&#xA;to equal&#xA;    &lt;string&gt;: AGGREGATING&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:316</failure>
          <system-out>�[1mSTEP�[0m: Checking if ComplianceSuite e8 scan status.phase is AGGREGATING&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Test stable/policy-e8-scan ComplianceSuite e8 scan results should be DONE" classname="Policy collection repo e2e Suite" time="120.117984521">
          <failure type="Failure">/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:318&#xA;Timed out after 120.000s.&#xA;Expected&#xA;    &lt;string&gt;: RUNNING&#xA;to equal&#xA;    &lt;string&gt;: DONE&#xA;/go/src/github.com/open-cluster-management/governance-policy-framework/test/policy-collection/policy_comp_operator_test.go:323</failure>
          <system-out>�[1mSTEP�[0m: Checking if ComplianceSuite e8 scan status.phase is DONE&#xA;</system-out>
      </testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Clean up after all clean up compliance scan e8" classname="Policy collection repo e2e Suite" time="12.964082984000001"></testcase>
      <testcase name="RHACM4K-2222 GRC: [P1][Sev1][policy-grc] Test compliance operator and scan Clean up after all clean up compliance operator" classname="Policy collection repo e2e Suite" time="27.534963196"></testcase>
  </testsuite>